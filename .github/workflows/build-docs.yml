name: Build Docs

on:
  push:
    branches: [ main ]          # 触发条件：推到 main
  workflow_dispatch:            # 手动运行

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ---------- 1. 拉仓库 ----------
      - name: Checkout repo
        uses: actions/checkout@v4

      # ---------- 2. 装 Node + 缓存 ----------
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      # ---------- 3. 安装依赖 ----------
      - name: Install dependencies
        run: |
          npm ci
          npm install -g honkit            # 全局安装 honkit CLI

      # ---------- 4. 构建 ----------
      - name: Build HonKit site
        env:
          # 给 Node 4 GB 堆，防止大型书 OOM
          NODE_OPTIONS: --max-old-space-size=6144 
        run: |
          npx honkit build . _book       # <── 关键：-o _book
          ls -R _book | head               # 看一下目录

      # ---------- 5A. 上传产物（如需人工下载或下游 Job 用） ----------
      - name: Upload _book artifact
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: _book

      # ---------- 5B. 自动发布到 GitHub Pages ----------
      # 如果你想用 GitHub Pages，请先在仓库设置里启用 Pages → “Deploy from branch: gh-pages”
      # 然后取消下一块注释；否则整段删除
      #
      # - name: Deploy to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v4
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: _book
      #     publish_branch: gh-pages   # 目标分支

      # ---------- 5C. (可选) 同步到宝塔服务器 ----------
      # 若想直接部署到自己的 VPS / 宝塔，需在 “仓库 → Settings → Secrets” 中预设：
      #   SCP_HOST、SCP_PORT、SCP_USER、SCP_KEY（私钥） 或 SCP_PASSWORD
      #
      # - name: Deploy via scp to BT Panel
      #   if: ${{ secrets.SCP_HOST != '' }}
      #   env:
      #     HOST: ${{ secrets.SCP_HOST }}
      #     PORT: ${{ secrets.SCP_PORT }}
      #     USER: ${{ secrets.SCP_USER }}
      #     KEY:  ${{ secrets.SCP_KEY }}
      #     # 或使用 PASSWORD 并加 -o PubkeyAuthentication=no
      #   run: |
      #     tar czf site.tgz _book
      #     scp -P $PORT -i $KEY site.tgz $USER@$HOST:/www/wwwroot/your-site/
      #     ssh -i $KEY -p $PORT $USER@$HOST "cd /www/wwwroot/your-site && tar xzf site.tgz && rm site.tgz"

